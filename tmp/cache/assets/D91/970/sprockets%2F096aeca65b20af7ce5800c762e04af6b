o: ActiveSupport::Cache::Entry	:@compressedF:@expires_in0:@created_atf1345891942.084082:@value{	I"length:EFi^I"digest;
F"%284c3cefadc440b89d3cd565338a8128I"source;
FI"^(function() {
  var root;

  root = typeof exports !== "undefined" && exports !== null ? exports : window;

  root.Slide = (function() {
    var animateSlide;

    function Slide($el, index) {
      this.$el = $el;
      this.index = index;
      this.$el.addClass('slide');
      this.$el.css('z-index', 10000 - this.index);
      this.first = this.index === 0;
      this.transparent = this.first && this.$el.is('header');
      this.last = this.$el.is('footer');
      this.slideshow = this.$el.hasClass('ss');
      this.movieframe = this.$el.hasClass('mf');
      this.fullscreen = this.$el.hasClass('fs');
      if (this.slideshow) {
        this.set_up_slideshow();
      }
      if (this.movieframe) {
        this.set_up_movieframes();
      }
      if (this.fullscreen) {
        this.set_up_fullscreen();
      }
    }

    Slide.prototype.setHeight = function(minHeight) {
      this.minHeight = minHeight;
      return this.height = this.$el.height();
    };

    Slide.prototype.prev = function() {
      var $li;
      $li = this.$el.find('.slideshow li.current').prev('li');
      if ($li.size() > 0) {
        return animateSlide($li);
      }
    };

    Slide.prototype.next = function() {
      var $li;
      $li = this.$el.find('.slideshow li.current').next('li');
      if ($li.size() > 0) {
        return animateSlide($li);
      }
    };

    Slide.prototype.scroll = function(delta) {
      var mt;
      mt = parseInt(this.$el.css('marginTop'), 10) + 50 * delta;
      if (mt > -100 && delta > 0) {
        return -1;
      }
      if (this.last && mt < -(this.height - this.minHeight) && delta < 0) {
        return this.snapBottom();
      }
      if (mt < -(this.height - 100) && delta < 0) {
        return 1;
      }
      console.log('moving');
      this.$el.stop().animate({
        marginTop: mt
      }, 200);
      return 0;
    };

    Slide.prototype.slideUpQuiet = function() {
      return this.$el.css({
        marginTop: -this.height
      });
    };

    Slide.prototype.slideDownQuiet = function() {
      return this.$el.css({
        marginTop: 0
      });
    };

    Slide.prototype.snapTop = function(callback) {
      return this.$el.animate({
        marginTop: 0
      }, 400, callback);
    };

    Slide.prototype.snapBottom = function(callback) {
      return this.$el.animate({
        marginTop: -(this.height - this.minHeight)
      }, 400, callback);
    };

    Slide.prototype.slideUp = function(callback) {
      return this.$el.animate({
        marginTop: -this.height
      }, 400, callback);
    };

    Slide.prototype.slideDown = function(callback) {
      return this.$el.animate({
        marginTop: 0
      }, 400, callback);
    };

    Slide.prototype.set_up_fullscreen = function() {
      var aspectRatio,
        _this = this;
      aspectRatio = 900 / 600;
      console.log(aspectRatio);
      return $(window).resize(function() {
        var left, top, wh, ww;
        wh = $(window).height();
        ww = $(window).width();
        _this.$el.find('.fullscreen').toggleClass("tall", (ww / wh) < aspectRatio);
        top = (wh - ww / aspectRatio) / 2;
        if (top > 0) {
          top = 0;
        }
        left = (ww - wh * aspectRatio) / 2;
        if (left > 0) {
          left = 0;
        }
        return _this.$el.find('.fullscreen img').css({
          top: top,
          left: left
        });
      }).trigger("resize");
    };

    Slide.prototype.set_up_movieframes = function() {
      var mf_play;
      mf_play = function(ev) {
        var $nxt,
          _this = this;
        $nxt = $(this).find('img.up').next();
        if ($nxt.length === 0) {
          $nxt = $(this).find('img:first');
        }
        $(this).find('img').removeClass(' up');
        $nxt.addClass(' up');
        return setTimeout((function() {
          return $(_this).trigger('mf:play');
        }), 75);
      };
      this.$el.on('mouseenter', '.img-wrapper', function(ev) {
        return $(this).off('mf:play', mf_play);
      });
      this.$el.on('mouseleave', '.img-wrapper', function(ev) {
        return $(this).on('mf:play', mf_play).trigger('mf:play');
      });
      return this.$el.find('.img-wrapper').on('mf:play', mf_play).trigger('mf:play');
    };

    animateSlide = function(selector) {
      var $li, $ss, gap, p, ww;
      ww = $(window).width();
      $li = $(selector);
      $ss = $li.closest('.slideshow');
      if ($ss.hasClass('moving')) {
        return;
      }
      $ss.find('li.current .img-data').removeClass('open');
      $ss.find('li').removeClass('current');
      $li.addClass('current');
      p = $li.position();
      gap = parseInt((ww - $li.outerWidth(true)) / 2, 10);
      $ss.addClass('moving');
      $ss.find('ul').animate({
        left: gap - p.left
      }, 600, function() {
        return $ss.removeClass('moving');
      });
      $ss.toggleClass('first', $li.prev().size() === 0);
      if ($ss.hasClass('first')) {
        $ss.removeClass('next-hover');
      }
      $ss.toggleClass('last', $li.next().size() === 0);
      $ss.find('.icon-right-arrow').css('right', gap - 8);
      return $ss.find('.icon-left-arrow').css('left', gap - 8);
    };

    Slide.prototype.set_up_slideshow = function() {
      var total_height;
      animateSlide(this.$el.find('li:first'));
      total_height = this.$el.find('.slideshow').height();
      this.$el.find('li').each(function() {
        return $(this).css({
          marginTop: (total_height - $(this).height()) / 2
        });
      });
      this.$el.find('.slideshow').height(total_height);
      this.$el.find('.slideshow').addClass('ready not-played');
      this.$el.on('click', 'li:not(.current) .img-wrapper, .img-data-handler, .icon-left-arrow, .icon-right-arrow', function(ev) {
        var $data, $dw, $t;
        $t = $(ev.currentTarget);
        if ($t.hasClass('img-wrapper')) {
          animateSlide($t.closest('li'));
        }
        if ($t.hasClass('icon-left-arrow')) {
          animateSlide($t.closest('.slideshow').find('li.current').prev('li'));
        }
        if ($t.hasClass('icon-right-arrow')) {
          animateSlide($t.closest('.slideshow').find('li.current').next('li'));
        }
        if ($t.hasClass('img-data-handler')) {
          $data = $t.closest('.img-data');
          $dw = $data.find('.img-data-wrapper');
          return $dw.animate({
            height: "toggle"
          }, 200, function() {
            return $data.toggleClass('open');
          });
        }
      });
      this.$el.on('mouseenter', 'li:not(.current), .icon-right-arrow', function(ev) {
        var $ss;
        $ss = $(ev.currentTarget).closest('.slideshow');
        return $ss.addClass('next-hover');
      });
      return this.$el.on('mouseleave', 'li:not(.current), .icon-right-arrow', function(ev) {
        var $ss;
        $ss = $(ev.currentTarget).closest('.slideshow');
        return $ss.removeClass('next-hover');
      });
    };

    return Slide;

  })();

}).call(this);
;
FI"_version;
F"%6b67a3ed09292738b42487f13c887898